apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manager-role
rules:
##
## Base operator rules
##
# We need to get namespaces so the operator can read namespaces to ensure they exist
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - namespaces
  - persistentvolumeclaims
  - pods
  - secrets
  - serviceaccounts
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
# We need to manage Helm release secrets
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  - secrets
  verbs:
  - "*"
- apiGroups:
  - appprotect.f5.com
  - appprotectdos.f5.com
  - k8s.nginx.org
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.openshift.io
  verbs:
  - create
  - delete
  - get
  resources:
  - securitycontextconstraints
##
## Rules for charts.nginx.org/v1alpha1, Kind: NginxIngress
##
- apiGroups:
  - charts.nginx.org
  resources:
  - nginxingresses
  - nginxingresses/status
  - nginxingresses/finalizers
  verbs:
  - "*"
- verbs:
  - "*"
  apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - "clusterrolebindings"
  - "clusterroles"
- verbs:
  - "*"
  apiGroups:
  - "networking.k8s.io"
  resources:
  - "ingressclasses"
- verbs:
  - "*"
  apiGroups:
  - "apps"
  resources:
  - "deployments"
- verbs:
  - "*"
  apiGroups:
  - ""
  resources:
  - "configmaps"
  - "secrets"
  - "serviceaccounts"
  - "services"

#+kubebuilder:scaffold:rules
---
# Create cluster role for IC resources
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nginx-ingress-admin
rules:
- apiGroups: 
  - appprotect.f5.com
  resources: 
  - appolicies
  - aplogconfs
  - apusersigs
  verbs: 
  - get 
  - watch
  - list
- apiGroups:
    - appprotectdos.f5.com
  resources:
    - apdospolicies
    - apdoslogconfs
    - dosprotectedresources
  verbs:
    - get
    - watch
    - list
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - security.openshift.io
  verbs:
  - use
  resources:
  - securitycontextconstraints
  resourceNames:
  - nginx-ingress-admin
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - k8s.nginx.org
  resources:
  - virtualservers
  - virtualserverroutes
  - globalconfigurations
  - transportservers
  - policies
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - k8s.nginx.org
  resources:
  - virtualservers/status
  - virtualserverroutes/status
  - policies/status
  - transportservers/status
  verbs:
  - update
- apiGroups:
  - cis.f5.com
  resources:
  - ingresslinks
  verbs:
  - list
  - watch
  - get
