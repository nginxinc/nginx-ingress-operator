apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
  name: nginx-ingress-operator.v0.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: NginxIngressController is the Schema for the nginxingresscontrollers
        API
      displayName: Nginx Ingress Controller
      kind: NginxIngressController
      name: nginxingresscontrollers.k8s.nginx.org
      resources:
      - kind: Deployment
        name: nic-deployment
        version: v1
      - kind: ReplicaSet
        name: nic-replicaset
        version: v1beta2
      - kind: Pod
        name: nic-runner
        version: v1
      specDescriptors:
      - description: App Protect support configuration. Requires enableCRDs set to
          true.
        displayName: App Protect
        path: appProtect
      - description: Initial values of the Ingress Controller ConfigMap. Check https://docs.nginx.com/nginx-ingress-controller/configuration/global-configuration/configmap-resource/
          for more information about possible values.
        displayName: Config Map Data
        path: configMapData
      - description: The TLS Secret for TLS termination of the default server. The
          format is namespace/name. The secret must be of the type kubernetes.io/tls.
          If not specified, the operator will generate and deploy a TLS Secret with
          a self-signed certificate and key.
        displayName: Default Secret
        path: defaultSecret
      - description: Enables the use of NGINX Ingress Resource Definitions (VirtualServer
          and VirtualServerRoute). Default is true.
        displayName: Enable CRDs
        path: enableCRDs
      - description: Bucketed response times from when NGINX establishes a connection
          to an upstream server to when the last byte of the response body is received
          by NGINX. **Note** The metric for the upstream isn't available until traffic
          is sent to the upstream.
        displayName: Enable Latency Metrics
        path: enableLatencyMetrics
      - description: Enables Leader election to avoid multiple replicas of the controller
          reporting the status of Ingress resources – only one replica will report
          status. Default is true.
        displayName: Enable Leader Election
        path: enableLeaderElection
      - description: Enables preview policies. Requires enableCRDs set to true.
        displayName: Enable Preview Policies
        path: enablePreviewPolicies
      - description: Enable custom NGINX configuration snippets in VirtualServer,
          VirtualServerRoute and TransportServer resources. Requires enableCRDs set
          to true.
        displayName: Enable Snippets
        path: enableSnippets
      - description: Enable TLS Passthrough on port 443. Requires enableCRDs set to
          true.
        displayName: Enable TLSPassthrough
        path: enableTLSPassthrough
      - description: The GlobalConfiguration resource for global configuration of
          the Ingress Controller. Format is namespace/name. Requires enableCRDs set
          to true.
        displayName: Global Configuration
        path: globalConfiguration
      - description: Adds a new location to the default server. The location responds
          with the 200 status code for any request. Useful for external health-checking
          of the Ingress controller.
        displayName: Health Status
        path: healthStatus
      - description: The image of the Ingress Controller.
        displayName: Image
        path: image
      - description: A class of the Ingress controller. The Ingress controller only
          processes Ingress resources that belong to its class (in other words, have
          the annotation “kubernetes.io/ingress.class”). Default is `nginx`.
        displayName: Ingress Class
        path: ingressClass
      - description: Log level for V logs. Format is 0 - 3
        displayName: Log Level
        path: logLevel
      - description: 'Enable debugging for NGINX. Uses the nginx-debug binary. Requires
          ‘error-log-level: debug’ in the ConfigMapData.'
        displayName: Nginx Debug
        path: nginxDebug
      - description: Deploys the Ingress Controller for NGINX Plus. The default is
          false meaning the Ingress Controller will be deployed for NGINX OSS.
        displayName: Nginx Plus
        path: nginxPlus
      - description: Timeout in milliseconds which the Ingress Controller will wait
          for a successful NGINX reload after a change or at the initial start.
        displayName: Nginx Reload Timeout
        path: nginxReloadTimeout
      - description: NGINX stub_status, or the NGINX Plus API.
        displayName: Nginx Status
        path: nginxStatus
      - description: NGINX or NGINX Plus metrics in the Prometheus format.
        displayName: Prometheus
        path: prometheus
      - description: The number of replicas of the Ingress Controller pod. The default
          is 1. Only applies if the type is set to deployment.
        displayName: Replicas
        path: replicas
      - description: Update the address field in the status of Ingresses resources.
        displayName: Report Ingress Status
        path: reportIngressStatus
      - description: 'Specifies the name of the IngressLink resource, which exposes
          the Ingress Controller pods via a BIG-IP system. The IP of the BIG-IP system
          is used when reporting the status of Ingress, VirtualServer and VirtualServerRoute
          resources. Requires reportIngressStatus.enable set to true. Note: If serviceType
          is LoadBalancer or reportIngressStatus.externalService is set, the value
          of this field will be ignored.'
        displayName: Ingress Link
        path: reportIngressStatus.ingressLink
      - description: The service of the Ingress controller.
        displayName: Service
        path: service
      - description: 'The type of the Service for the Ingress Controller. Valid Service
          types are: NodePort and LoadBalancer.'
        displayName: Service Type
        path: serviceType
      - description: The type of the Ingress Controller installation - deployment
          or daemonset.
        displayName: Type
        path: type
      - description: Namespace to watch for Ingress resources. By default the Ingress
          controller watches all namespaces.
        displayName: Watch Namespace
        path: watchNamespace
      - description: A Secret with a TLS certificate and key for TLS termination of
          every Ingress host for which TLS termination is enabled but the Secret is
          not specified. The secret must be of the type kubernetes.io/tls. If the
          argument is not set, for such Ingress hosts NGINX will break any attempt
          to establish a TLS connection. If the argument is set, but the Ingress controller
          is not able to fetch the Secret from Kubernetes API, the Ingress Controller
          will fail to start. Format is namespace/name.
        displayName: Wildcard TLS
        path: wildcardTLS
      statusDescriptors:
      - description: Deployed is true if the Operator has finished the deployment
          of the NginxIngressController.
        displayName: Deployed
        path: deployed
      version: v1alpha1
  description: The NGINX Ingress Operator is a Kubernetes/OpenShift component which
    deploys and manages one or more NGINX/NGINX Plus Ingress Controllers
  displayName: Nginx Ingress Operator
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2My4zNiA3My40NCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMwMDk2Mzk7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOiM5OTk7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5OR0lOWC1oZXgtc291cmNlLVJHQi0wMjwvdGl0bGU+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNLjUwMjcyLDU0LjcyMWEzLjYzNywzLjYzNywwLDAsMCwxLjM2NjQxLDEuMzU1OTNMMjkuODIxOTIsNzIuMjE1NDlsLjAwMDg3LS4wMDA4N2EzLjY2NzkzLDMuNjY3OTMsMCwwLDAsMy43MTUyOSwwTDYxLjQ5MTc1LDU2LjA3NjA2YTMuNjY1NjgsMy42NjU2OCwwLDAsMCwxLjg1Njc3LTMuMjE2MTlWMjAuNTgyNzVsLS4wMDA4Ny0uMDAwODdBMy42NjY4NSwzLjY2Njg1LDAsMCwwLDYxLjQ5LDE3LjM2NDgxTDMzLjUzNjM0LDEuMjI2MjVWMS4yMjUzOGEzLjY2MzEzLDMuNjYzMTMsMCwwLDAtMy43MTI2OCwwdi4wMDA4N0wxLjg3MDg3LDE3LjM2NDgxQTMuNjY1MywzLjY2NTMsMCwwLDAsLjAxMjM1LDIwLjU4MTg4bC0uMDAwODcuMDAwODdWNTIuODU5ODdBMy42NDQyNiwzLjY0NDI2LDAsMCwwLC41MDE4NSw1NC43MjEiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0yMi43MzAxNSw0OS4wMDhhMy41OTQ4OCwzLjU5NDg4LDAsMCwxLTcuMTg5NzYsMGwuMDAwODguMDAwODguMDAzNDktMjQuNjc3MjdjMC0xLjkxMTc0LDEuNjg5MjQtMy40OTI3OSw0LjA4MTc1LTMuNDkyNzlhNi4zOTI4Miw2LjM5MjgyLDAsMCwxLDQuOTAwMjEsMi4xOTFMMjUuNjEzLDI0LjMyOTg5LDQwLjYzMTI0LDQyLjMwMjUzVjI0LjQzMkg0MC42Mjk1YTMuNTk0ODgsMy41OTQ4OCwwLDAsMSw3LjE4OTc1LDBoLS4wMDA4N2wtLjAwMzQ5LDI0LjY3NTUyYzAsMS45MTE3NS0xLjY5MDExLDMuNDkyNzktNC4wODE3NSwzLjQ5Mjc5YTYuMzg4NTcsNi4zODg1NywwLDAsMS00LjkwMDIxLTIuMTkxTDIyLjcyODQsMzEuMTM2NTlWNDkuMDA4OVoiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik01OS45NzQ3OCw2Ni4wMzQxaC40NTkzNFY2NS4wMTFoLjM2MzM1YTEuMDM2NzQsMS4wMzY3NCwwLDAsMSwuNTEwMzcuMDg1MjIuNjM5MTcuNjM5MTcsMCwwLDEsLjI0MjU1LjU5NTEzdi4yMDk3NmwuMDEwMjkuMDc4MmEuMTU3ODEuMTU3ODEsMCwwLDEsLjAwNy4wMzI3OGMuMDAyMzQuMDEyNjQuMDAzMjguMDE2MzguMDEwMy4wMjJoLjQyNTYzbC0uMDE1NDYtLjAyOWEuMjk4NjMuMjk4NjMsMCwwLDEtLjAyMDYtLjEzM2MtLjAwNjA5LS4wNzM1MS0uMDA2MDktLjEzNjI1LS4wMDYwOS0uMTk0MzF2LS4xOTM4NWEuNzQxOTQuNzQxOTQsMCwwLDAtLjE0MjM0LS40MDU0OS42NjEyOS42NjEyOSwwLDAsMC0uNDUzMjUtLjI1NDcyLDEuMTE4ODQsMS4xMTg4NCwwLDAsMCwuMzc3ODctLjEyMjY4LjU2NjczLjU2NjczLDAsMCwwLC4yNTM3OC0uNTE1MDUuNjQwMDguNjQwMDgsMCwwLDAtLjQwMTc0LS42NjA2OCwxLjk5OTA2LDEuOTk5MDYsMCwwLDAtLjcxMjE5LS4wOTMxOGgtLjkwODg0Wm0xLjMwNjM3LTEuNDAyODJhMS4xODgyLDEuMTg4MiwwLDAsMS0uNDM2ODYuMDU4MDZoLS40MTAxN1Y2My43NDIxaC4zOTE0NGExLjE1NTUsMS4xNTU1LDAsMCwxLC41NTIuMTAxNjEuMzk0MTMuMzk0MTMsMCwwLDEsLjE3Mjc4LjM3OTc0LjQwMDg3LjQwMDg3LDAsMCwxLS4yNjkyNC40MDc4M20xLjMzNC0xLjU2MzlhMi4zMDc5MiwyLjMwNzkyLDAsMCwwLTEuNjg3LS42ODk3MSwyLjM3MywyLjM3MywwLDAsMCwwLDQuNzQ2LDIuMzc3MjQsMi4zNzcyNCwwLDAsMCwxLjY4Ny00LjA1NjNtLS4yNDExNC4yMzU1MmExLjk0MzU5LDEuOTQzNTksMCwwLDEsLjU5NTU5LDEuNDQzNTYsMi4wMzkyMiwyLjAzOTIyLDAsMCwxLTMuNDg1NTIsMS40NTA1OSwyLjAxMzExLDIuMDEzMTEsMCwwLDEtLjU5Mjc5LTEuNDUwNTlBMi4wNDYyNywyLjA0NjI3LDAsMCwxLDYwLjkyODEsNjIuNjk3YTEuOTQ2LDEuOTQ2LDAsMCwxLDEuNDQ1OTEuNjA1ODkiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - nginx
  - ingress-controller
  - ingress
  - controller
  - kubernetes
  - openshift
  links:
  - name: Nginx Ingress Operator
    url: https://github.com/nginxinc/nginx-ingress-operator
  maintainers:
  - email: kubernetes@nginx.com
    name: NGINX Inc
  maturity: alpha
  provider:
    name: NGINX Inc
  replaces: nginx-ingress-operator.v0.2.0
  version: 0.0.0
